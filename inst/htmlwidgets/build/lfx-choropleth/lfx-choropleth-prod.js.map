{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/isLength.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/lang/isObject.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/isIndex.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/isArrayLike.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/isObjectLike.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/function/restParam.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/lang/isArray.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/lang/isArguments.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/getNative.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/object/keys.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/object/assign.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/object/extend.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/createDefaults.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/assignDefaults.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/isIterateeCall.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/utility/identity.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/bindCallback.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/createAssigner.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/baseCopy.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/baseAssign.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/object/keysIn.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/shimKeys.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/baseProperty.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/getLength.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/lang/isFunction.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/lang/isNative.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/internal/assignWith.js","webpack:///./node_modules/leaflet-choropleth/node_modules/lodash/object/defaults.js","webpack:///(webpack)/buildin/module.js","webpack:///./node_modules/chroma-js/chroma.js","webpack:///external \"L\"","webpack:///./node_modules/leaflet-choropleth/src/choropleth.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","MAX_SAFE_INTEGER","type","reIsUint","length","test","getLength","isLength","FUNC_ERROR_TEXT","nativeMax","Math","max","func","start","TypeError","undefined","args","arguments","index","rest","Array","this","otherArgs","apply","getNative","isObjectLike","objToString","toString","isArray","isArrayLike","objectProto","propertyIsEnumerable","isNative","key","isObject","shimKeys","nativeKeys","keys","Ctor","constructor","assignWith","baseAssign","assign","createAssigner","source","customizer","restParam","assigner","push","objectValue","sourceValue","isIndex","other","identity","thisArg","argCount","collection","accumulator","bindCallback","isIterateeCall","sources","guard","props","baseCopy","isArguments","isProto","result","skipIndexes","keysIn","propsLength","allowIndexes","baseProperty","funcTag","isFunction","reIsHostCtor","fnToString","Function","reIsNative","RegExp","replace","assignDefaults","defaults","createDefaults","webpackPolyfill","deprecate","paths","children","Color","DEG2RAD","LAB_CONSTANTS","PI","PITHIRD","RAD2DEG","TWOPI","_average_lrgb","_guess_formats","_guess_formats_sorted","_input","_interpolators","abs","atan2","bezier","blend","blend_f","brewer","burn","chroma","clip_rgb","cmyk2rgb","cos","css2rgb","darken","dodge","each","floor","hcg2rgb","hex2rgb","hsi2rgb","hsl2css","hsl2rgb","hsv2rgb","interpolate","interpolate_hsx","interpolate_lab","interpolate_lrgb","interpolate_num","interpolate_rgb","lab2lch","lab2rgb","lab_xyz","lch2lab","lch2rgb","lighten","limit","log","luminance_x","multiply","num2rgb","overlay","pow","rgb2cmyk","rgb2css","rgb2hcg","rgb2hex","rgb2hsi","rgb2hsl","rgb2hsv","rgb2lab","rgb2lch","rgb2luminance","rgb2num","rgb2temperature","rgb2xyz","rgb_xyz","rnd","round","screen","sin","sqrt","temperature2rgb","unpack","w3cx11","xyz_lab","xyz_rgb","slice","classToType","len","ref","split","toLowerCase","obj","strType","x","min","rgb","_clipped","_unclipped","ctor","child","__WEBPACK_AMD_DEFINE_RESULT__","version","arg","chk","len1","me","mode","w","_rgb","sort","a","b","console","warn","hex","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","results","colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","y","z","isNaN","Yn","Xn","Zn","t","t1","t2","t0","Kn","t3","g","ref1","lab","concat","I","I0","I1","lab0","lab1","lab2","lab3","ref2","f","scale","cubehelix","rotations","hue","gamma","lightness","dh","dl","fract","amp","cos_a","sin_a","h","random","code","charAt","col1","col2","interpol","res","alpha","mix","k","v","map","rgba","lrgb","xyz0","xyz1","xyz","average","A","cnt","dx","dy","first","xyz2","splice","u","match","substr","parseInt","css","channels","hxa","str","Number","NaN","hsl","q","ref3","ref4","ref5","delta","hsv","num","_c","_g","hcg","aa","ab","join","named","L","lch","hcl","reverse","cmyk","gl","luminance","lum","cur_lum","eps","max_iter","lm","kelvin","temp","maxTemp","minTemp","temperature","K","contrast","l1","l2","distance","sum_sq","deltaE","C","L1","L2","a1","a2","b1","b2","c1","c2","c4","delA","delB","delC","h1","sc","sl","v1","v2","v3","modechan","channel","src","indexOf","set","clipped","amount","brighten","darker","brighter","saturate","desaturate","premultiply","bottom","top","normal","c0","out","analyze","data","val","MAX_VALUE","sum","values","count","domain","limits","positions","_classes","_colorCache","_colors","_correctLightness","_domain","_gamma","_max","_min","_mode","_nacol","_out","_padding","_pos","_spread","_useCache","getClass","getColor","resetCache","setColors","tmap","col","maxc","minc","bypassMap","classes","_m","range","_o","spread","correctLightness","L0","L_actual","L_diff","L_ideal","pol","padding","numColors","dd","dm","samples","cache","nodata","scales","cool","hot","filter","add","visit","ac","ad","ae","af","ag","ah","ai","aj","ak","al","am","assignments","best","centroids","cluster","clusterSizes","dist","j","kClusters","max_log","min_log","mindist","nb_iters","newCentroids","pb","pr","ref10","ref11","ref12","ref13","ref14","ref6","ref7","ref8","ref9","repeat","tmpKMeansBreaks","LOG10E","acos","hsi","hue0","hue1","lbv0","lbv1","sat","sat0","sat1","n1","n2","_","extend","getValue","feature","valueProperty","properties","GeoJSONChoropleth","GeoJSON","initialize","geojson","options","legendOptions","steps","channelMode","bezierInterpolate","_options","_userStyle","style","cols","_limits","$","isEmptyObject","formatOptions","legendTitle","highlightStyle","resetStyle","title","locale","maximumFractionDigits","_legend","control","self","featureValue","fillColor","styleFunction","setGeoJSON","onAdd","LayerGroup","addTo","_map","onRemove","remove","Util","features","addData","localeOptions","div","DomUtil","create","document","createElement","appendChild","createTextNode","from","to","span","color","text","classList","id","stamp","dataset","background","border","textSpan","toLocaleString","eachLayer","layer","_legendItemId","_highlightLegendItem","on","mouseover","e","getElementById","target","mouseout","addEventListener","event","currentTarget","setStyle","bringToFront","sendToBack","bringToBack","choropleth"],"mappings":"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","file":"lfx-choropleth-prod.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n","/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n */\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/** Used to detect unsigned integer values. */\nvar reIsUint = /^\\d+$/;\n\n/**\n * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n * of an array-like value.\n */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;\n","var getLength = require('./getLength'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(getLength(value));\n}\n\nmodule.exports = isArrayLike;\n","/**\n * Checks if `value` is object-like.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as an array.\n *\n * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/Web/JavaScript/Reference/Functions/rest_parameters).\n *\n * @static\n * @memberOf _\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.restParam(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction restParam(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        rest = Array(length);\n\n    while (++index < length) {\n      rest[index] = args[start + index];\n    }\n    switch (start) {\n      case 0: return func.call(this, rest);\n      case 1: return func.call(this, args[0], rest);\n      case 2: return func.call(this, args[0], args[1], rest);\n    }\n    var otherArgs = Array(start + 1);\n    index = -1;\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = rest;\n    return func.apply(this, otherArgs);\n  };\n}\n\nmodule.exports = restParam;\n","var getNative = require('../internal/getNative'),\n    isLength = require('../internal/isLength'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** `Object#toString` result references. */\nvar arrayTag = '[object Array]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeIsArray = getNative(Array, 'isArray');\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(function() { return arguments; }());\n * // => false\n */\nvar isArray = nativeIsArray || function(value) {\n  return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n};\n\nmodule.exports = isArray;\n","var isArrayLike = require('../internal/isArrayLike'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Native method references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is classified as an `arguments` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nfunction isArguments(value) {\n  return isObjectLike(value) && isArrayLike(value) &&\n    hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n}\n\nmodule.exports = isArguments;\n","var isNative = require('../lang/isNative');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = object == null ? undefined : object[key];\n  return isNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var getNative = require('../internal/getNative'),\n    isArrayLike = require('../internal/isArrayLike'),\n    isObject = require('../lang/isObject'),\n    shimKeys = require('../internal/shimKeys');\n\n/* Native method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = getNative(Object, 'keys');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nvar keys = !nativeKeys ? shimKeys : function(object) {\n  var Ctor = object == null ? undefined : object.constructor;\n  if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n      (typeof object != 'function' && isArrayLike(object))) {\n    return shimKeys(object);\n  }\n  return isObject(object) ? nativeKeys(object) : [];\n};\n\nmodule.exports = keys;\n","var assignWith = require('../internal/assignWith'),\n    baseAssign = require('../internal/baseAssign'),\n    createAssigner = require('../internal/createAssigner');\n\n/**\n * Assigns own enumerable properties of source object(s) to the destination\n * object. Subsequent sources overwrite property assignments of previous sources.\n * If `customizer` is provided it's invoked to produce the assigned values.\n * The `customizer` is bound to `thisArg` and invoked with five arguments:\n * (objectValue, sourceValue, key, object, source).\n *\n * **Note:** This method mutates `object` and is based on\n * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n *\n * @static\n * @memberOf _\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {*} [thisArg] The `this` binding of `customizer`.\n * @returns {Object} Returns `object`.\n * @example\n *\n * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n * // => { 'user': 'fred', 'age': 40 }\n *\n * // using a customizer callback\n * var defaults = _.partialRight(_.assign, function(value, other) {\n *   return _.isUndefined(value) ? other : value;\n * });\n *\n * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n * // => { 'user': 'barney', 'age': 36 }\n */\nvar assign = createAssigner(function(object, source, customizer) {\n  return customizer\n    ? assignWith(object, source, customizer)\n    : baseAssign(object, source);\n});\n\nmodule.exports = assign;\n","module.exports = require('./assign');\n","var restParam = require('../function/restParam');\n\n/**\n * Creates a `_.defaults` or `_.defaultsDeep` function.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Function} Returns the new defaults function.\n */\nfunction createDefaults(assigner, customizer) {\n  return restParam(function(args) {\n    var object = args[0];\n    if (object == null) {\n      return object;\n    }\n    args.push(customizer);\n    return assigner.apply(undefined, args);\n  });\n}\n\nmodule.exports = createDefaults;\n","/**\n * Used by `_.defaults` to customize its `_.assign` use.\n *\n * @private\n * @param {*} objectValue The destination object property value.\n * @param {*} sourceValue The source object property value.\n * @returns {*} Returns the value to assign to the destination object.\n */\nfunction assignDefaults(objectValue, sourceValue) {\n  return objectValue === undefined ? sourceValue : objectValue;\n}\n\nmodule.exports = assignDefaults;\n","var isArrayLike = require('./isArrayLike'),\n    isIndex = require('./isIndex'),\n    isObject = require('../lang/isObject');\n\n/**\n * Checks if the provided arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n      ? (isArrayLike(object) && isIndex(index, object.length))\n      : (type == 'string' && index in object)) {\n    var other = object[index];\n    return value === value ? (value === other) : (other !== other);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n *\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var identity = require('../utility/identity');\n\n/**\n * A specialized version of `baseCallback` which only supports `this` binding\n * and specifying the number of arguments to provide to `func`.\n *\n * @private\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {number} [argCount] The number of arguments to provide to `func`.\n * @returns {Function} Returns the callback.\n */\nfunction bindCallback(func, thisArg, argCount) {\n  if (typeof func != 'function') {\n    return identity;\n  }\n  if (thisArg === undefined) {\n    return func;\n  }\n  switch (argCount) {\n    case 1: return function(value) {\n      return func.call(thisArg, value);\n    };\n    case 3: return function(value, index, collection) {\n      return func.call(thisArg, value, index, collection);\n    };\n    case 4: return function(accumulator, value, index, collection) {\n      return func.call(thisArg, accumulator, value, index, collection);\n    };\n    case 5: return function(value, other, key, object, source) {\n      return func.call(thisArg, value, other, key, object, source);\n    };\n  }\n  return function() {\n    return func.apply(thisArg, arguments);\n  };\n}\n\nmodule.exports = bindCallback;\n","var bindCallback = require('./bindCallback'),\n    isIterateeCall = require('./isIterateeCall'),\n    restParam = require('../function/restParam');\n\n/**\n * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return restParam(function(object, sources) {\n    var index = -1,\n        length = object == null ? 0 : sources.length,\n        customizer = length > 2 ? sources[length - 2] : undefined,\n        guard = length > 2 ? sources[2] : undefined,\n        thisArg = length > 1 ? sources[length - 1] : undefined;\n\n    if (typeof customizer == 'function') {\n      customizer = bindCallback(customizer, thisArg, 5);\n      length -= 2;\n    } else {\n      customizer = typeof thisArg == 'function' ? thisArg : undefined;\n      length -= (customizer ? 1 : 0);\n    }\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n","/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property names to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @returns {Object} Returns `object`.\n */\nfunction baseCopy(source, props, object) {\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    object[key] = source[key];\n  }\n  return object;\n}\n\nmodule.exports = baseCopy;\n","var baseCopy = require('./baseCopy'),\n    keys = require('../object/keys');\n\n/**\n * The base implementation of `_.assign` without support for argument juggling,\n * multiple sources, and `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return source == null\n    ? object\n    : baseCopy(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('../internal/isIndex'),\n    isLength = require('../internal/isLength'),\n    isObject = require('../lang/isObject');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  if (object == null) {\n    return [];\n  }\n  if (!isObject(object)) {\n    object = Object(object);\n  }\n  var length = object.length;\n  length = (length && isLength(length) &&\n    (isArray(object) || isArguments(object)) && length) || 0;\n\n  var Ctor = object.constructor,\n      index = -1,\n      isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n      result = Array(length),\n      skipIndexes = length > 0;\n\n  while (++index < length) {\n    result[index] = (index + '');\n  }\n  for (var key in object) {\n    if (!(skipIndexes && isIndex(key, length)) &&\n        !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = keysIn;\n","var isArguments = require('../lang/isArguments'),\n    isArray = require('../lang/isArray'),\n    isIndex = require('./isIndex'),\n    isLength = require('./isLength'),\n    keysIn = require('../object/keysIn');\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A fallback implementation of `Object.keys` which creates an array of the\n * own enumerable property names of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction shimKeys(object) {\n  var props = keysIn(object),\n      propsLength = props.length,\n      length = propsLength && object.length;\n\n  var allowIndexes = !!length && isLength(length) &&\n    (isArray(object) || isArguments(object));\n\n  var index = -1,\n      result = [];\n\n  while (++index < propsLength) {\n    var key = props[index];\n    if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = shimKeys;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var baseProperty = require('./baseProperty');\n\n/**\n * Gets the \"length\" property value of `object`.\n *\n * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n * that affects Safari on at least iOS 8.1-8.3 ARM64.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {*} Returns the \"length\" value.\n */\nvar getLength = baseProperty('length');\n\nmodule.exports = getLength;\n","var isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]';\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in older versions of Chrome and Safari which return 'function' for regexes\n  // and Safari 8 which returns 'object' for typed array constructors.\n  return isObject(value) && objToString.call(value) == funcTag;\n}\n\nmodule.exports = isFunction;\n","var isFunction = require('./isFunction'),\n    isObjectLike = require('../internal/isObjectLike');\n\n/** Used to detect host constructors (Safari > 5). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for native method references. */\nvar objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar fnToString = Function.prototype.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * Checks if `value` is a native function.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (value == null) {\n    return false;\n  }\n  if (isFunction(value)) {\n    return reIsNative.test(fnToString.call(value));\n  }\n  return isObjectLike(value) && reIsHostCtor.test(value);\n}\n\nmodule.exports = isNative;\n","var keys = require('../object/keys');\n\n/**\n * A specialized version of `_.assign` for customizing assigned values without\n * support for argument juggling, multiple sources, and `this` binding `customizer`\n * functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n */\nfunction assignWith(object, source, customizer) {\n  var index = -1,\n      props = keys(source),\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index],\n        value = object[key],\n        result = customizer(value, source[key], key, object, source);\n\n    if ((result === result ? (result !== value) : (value === value)) ||\n        (value === undefined && !(key in object))) {\n      object[key] = result;\n    }\n  }\n  return object;\n}\n\nmodule.exports = assignWith;\n","var assign = require('./assign'),\n    assignDefaults = require('../internal/assignDefaults'),\n    createDefaults = require('../internal/createDefaults');\n\n/**\n * Assigns own enumerable properties of source object(s) to the destination\n * object for all destination properties that resolve to `undefined`. Once a\n * property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n * // => { 'user': 'barney', 'age': 36 }\n */\nvar defaults = createDefaults(assign, assignDefaults);\n\nmodule.exports = defaults;\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","\n/**\n * @license\n *\n * chroma.js - JavaScript library for color conversions\n * \n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n * \n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n * \n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n * \n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n * \n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n * \n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n */\n\n(function() {\n  var Color, DEG2RAD, LAB_CONSTANTS, PI, PITHIRD, RAD2DEG, TWOPI, _average_lrgb, _guess_formats, _guess_formats_sorted, _input, _interpolators, abs, atan2, bezier, blend, blend_f, brewer, burn, chroma, clip_rgb, cmyk2rgb, colors, cos, css2rgb, darken, dodge, each, floor, hcg2rgb, hex2rgb, hsi2rgb, hsl2css, hsl2rgb, hsv2rgb, interpolate, interpolate_hsx, interpolate_lab, interpolate_lrgb, interpolate_num, interpolate_rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, lighten, limit, log, luminance_x, m, max, multiply, normal, num2rgb, overlay, pow, rgb2cmyk, rgb2css, rgb2hcg, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb2luminance, rgb2num, rgb2temperature, rgb2xyz, rgb_xyz, rnd, root, round, screen, sin, sqrt, temperature2rgb, type, unpack, w3cx11, xyz_lab, xyz_rgb,\n    slice = [].slice;\n\n  type = (function() {\n\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n     */\n    var classToType, len, name, o, ref;\n    classToType = {};\n    ref = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (o = 0, len = ref.length; o < len; o++) {\n      name = ref[o];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return Array.prototype.slice.call(args);\n    } else {\n      return args[0];\n    }\n  };\n\n  clip_rgb = function(rgb) {\n    var i, o;\n    rgb._clipped = false;\n    rgb._unclipped = rgb.slice(0);\n    for (i = o = 0; o < 3; i = ++o) {\n      if (i < 3) {\n        if (rgb[i] < 0 || rgb[i] > 255) {\n          rgb._clipped = true;\n        }\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    if (!rgb._clipped) {\n      delete rgb._unclipped;\n    }\n    return rgb;\n  };\n\n  PI = Math.PI, round = Math.round, cos = Math.cos, floor = Math.floor, pow = Math.pow, log = Math.log, sin = Math.sin, sqrt = Math.sqrt, atan2 = Math.atan2, max = Math.max, abs = Math.abs;\n\n  TWOPI = PI * 2;\n\n  PITHIRD = PI / 3;\n\n  DEG2RAD = PI / 180;\n\n  RAD2DEG = 180 / PI;\n\n  chroma = function() {\n    if (arguments[0] instanceof Color) {\n      return arguments[0];\n    }\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, arguments, function(){});\n  };\n\n  chroma[\"default\"] = chroma;\n\n  _interpolators = [];\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return chroma;\n    });\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.version = '1.4.1';\n\n  _input = {};\n\n  _guess_formats = [];\n\n  _guess_formats_sorted = false;\n\n  Color = (function() {\n    function Color() {\n      var arg, args, chk, len, len1, me, mode, o, w;\n      me = this;\n      args = [];\n      for (o = 0, len = arguments.length; o < len; o++) {\n        arg = arguments[o];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length > 1) {\n        mode = args[args.length - 1];\n      }\n      if (_input[mode] != null) {\n        me._rgb = clip_rgb(_input[mode](unpack(args.slice(0, -1))));\n      } else {\n        if (!_guess_formats_sorted) {\n          _guess_formats = _guess_formats.sort(function(a, b) {\n            return b.p - a.p;\n          });\n          _guess_formats_sorted = true;\n        }\n        for (w = 0, len1 = _guess_formats.length; w < len1; w++) {\n          chk = _guess_formats[w];\n          mode = chk.test.apply(chk, args);\n          if (mode) {\n            break;\n          }\n        }\n        if (mode) {\n          me._rgb = clip_rgb(_input[mode].apply(_input, args));\n        }\n      }\n      if (me._rgb == null) {\n        console.warn('unknown format: ' + args);\n      }\n      if (me._rgb == null) {\n        me._rgb = [0, 0, 0];\n      }\n      if (me._rgb.length === 3) {\n        me._rgb.push(1);\n      }\n    }\n\n    Color.prototype.toString = function() {\n      return this.hex();\n    };\n\n    return Color;\n\n  })();\n\n  chroma._input = _input;\n\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n   */\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  (function() {\n    var key, results;\n    results = [];\n    for (key in brewer) {\n      results.push(brewer[key.toLowerCase()] = brewer[key]);\n    }\n    return results;\n  })();\n\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  w3cx11 = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflower: '#6495ed',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    laserlemon: '#ffff54',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrod: '#fafad2',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    maroon2: '#7f0000',\n    maroon3: '#b03060',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    purple2: '#7f007f',\n    purple3: '#a020f0',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32'\n  };\n\n  chroma.colors = colors = w3cx11;\n\n  lab2rgb = function() {\n    var a, args, b, g, l, r, x, y, z;\n    args = unpack(arguments);\n    l = args[0], a = args[1], b = args[2];\n    y = (l + 16) / 116;\n    x = isNaN(a) ? y : y + a / 500;\n    z = isNaN(b) ? y : y - b / 200;\n    y = LAB_CONSTANTS.Yn * lab_xyz(y);\n    x = LAB_CONSTANTS.Xn * lab_xyz(x);\n    z = LAB_CONSTANTS.Zn * lab_xyz(z);\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  xyz_rgb = function(r) {\n    return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow(r, 1 / 2.4) - 0.055);\n  };\n\n  lab_xyz = function(t) {\n    if (t > LAB_CONSTANTS.t1) {\n      return t * t * t;\n    } else {\n      return LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\n    }\n  };\n\n  LAB_CONSTANTS = {\n    Kn: 18,\n    Xn: 0.950470,\n    Yn: 1,\n    Zn: 1.088830,\n    t0: 0.137931034,\n    t1: 0.206896552,\n    t2: 0.12841855,\n    t3: 0.008856452\n  };\n\n  rgb2lab = function() {\n    var b, g, r, ref, ref1, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2xyz(r, g, b), x = ref1[0], y = ref1[1], z = ref1[2];\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(t) {\n    if (t > LAB_CONSTANTS.t3) {\n      return pow(t, 1 / 3);\n    } else {\n      return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\n    }\n  };\n\n  rgb2xyz = function() {\n    var b, g, r, ref, x, y, z;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS.Yn);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn);\n    return [x, y, z];\n  };\n\n  chroma.lab = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['lab']), function(){});\n  };\n\n  _input.lab = lab2rgb;\n\n  Color.prototype.lab = function() {\n    return rgb2lab(this._rgb);\n  };\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, ref, ref1, ref2;\n    colors = (function() {\n      var len, o, results;\n      results = [];\n      for (o = 0, len = colors.length; o < len; o++) {\n        c = colors[o];\n        results.push(chroma(c));\n      }\n      return results;\n    })();\n    if (colors.length === 2) {\n      ref = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref[0], lab1 = ref[1];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      ref1 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref1[0], lab1 = ref1[1], lab2 = ref1[2];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      ref2 = (function() {\n        var len, o, results;\n        results = [];\n        for (o = 0, len = colors.length; o < len; o++) {\n          c = colors[o];\n          results.push(c.lab());\n        }\n        return results;\n      })(), lab0 = ref2[0], lab1 = ref2[1], lab2 = ref2[2], lab3 = ref2[3];\n      I = function(t) {\n        var i, lab;\n        lab = (function() {\n          var o, results;\n          results = [];\n          for (i = o = 0; o <= 2; i = ++o) {\n            results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.bezier = function(colors) {\n    var f;\n    f = bezier(colors);\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    return f;\n  };\n\n  chroma.cubehelix = function(start, rotations, hue, gamma, lightness) {\n    var dh, dl, f;\n    if (start == null) {\n      start = 300;\n    }\n    if (rotations == null) {\n      rotations = -1.5;\n    }\n    if (hue == null) {\n      hue = 1;\n    }\n    if (gamma == null) {\n      gamma = 1;\n    }\n    if (lightness == null) {\n      lightness = [0, 1];\n    }\n    dh = 0;\n    if (type(lightness) === 'array') {\n      dl = lightness[1] - lightness[0];\n    } else {\n      dl = 0;\n      lightness = [lightness, lightness];\n    }\n    f = function(fract) {\n      var a, amp, b, cos_a, g, h, l, r, sin_a;\n      a = TWOPI * ((start + 120) / 360 + rotations * fract);\n      l = pow(lightness[0] + dl * fract, gamma);\n      h = dh !== 0 ? hue[0] + fract * dh : hue;\n      amp = h * l * (1 - l) / 2;\n      cos_a = cos(a);\n      sin_a = sin(a);\n      r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\n      g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\n      b = l + amp * (+1.97294 * cos_a);\n      return chroma(clip_rgb([r * 255, g * 255, b * 255, 1]));\n    };\n    f.start = function(s) {\n      if (s == null) {\n        return start;\n      }\n      start = s;\n      return f;\n    };\n    f.rotations = function(r) {\n      if (r == null) {\n        return rotations;\n      }\n      rotations = r;\n      return f;\n    };\n    f.gamma = function(g) {\n      if (g == null) {\n        return gamma;\n      }\n      gamma = g;\n      return f;\n    };\n    f.hue = function(h) {\n      if (h == null) {\n        return hue;\n      }\n      hue = h;\n      if (type(hue) === 'array') {\n        dh = hue[1] - hue[0];\n        if (dh === 0) {\n          hue = hue[1];\n        }\n      } else {\n        dh = 0;\n      }\n      return f;\n    };\n    f.lightness = function(h) {\n      if (h == null) {\n        return lightness;\n      }\n      if (type(h) === 'array') {\n        lightness = h;\n        dl = h[1] - h[0];\n      } else {\n        lightness = [h, h];\n        dl = 0;\n      }\n      return f;\n    };\n    f.scale = function() {\n      return chroma.scale(f);\n    };\n    f.hue(hue);\n    return f;\n  };\n\n  chroma.random = function() {\n    var code, digits, i, o;\n    digits = '0123456789abcdef';\n    code = '#';\n    for (i = o = 0; o < 6; i = ++o) {\n      code += digits.charAt(floor(Math.random() * 16));\n    }\n    return new Color(code);\n  };\n\n  _interpolators = [];\n\n  interpolate = function(col1, col2, f, m) {\n    var interpol, len, o, res;\n    if (f == null) {\n      f = 0.5;\n    }\n    if (m == null) {\n      m = 'rgb';\n    }\n\n    /*\n    interpolates between colors\n    f = 0 --> me\n    f = 1 --> col\n     */\n    if (type(col1) !== 'object') {\n      col1 = chroma(col1);\n    }\n    if (type(col2) !== 'object') {\n      col2 = chroma(col2);\n    }\n    for (o = 0, len = _interpolators.length; o < len; o++) {\n      interpol = _interpolators[o];\n      if (m === interpol[0]) {\n        res = interpol[1](col1, col2, f, m);\n        break;\n      }\n    }\n    if (res == null) {\n      throw \"color mode \" + m + \" is not supported\";\n    }\n    return res.alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n  };\n\n  chroma.interpolate = interpolate;\n\n  Color.prototype.interpolate = function(col2, f, m) {\n    return interpolate(this, col2, f, m);\n  };\n\n  chroma.mix = interpolate;\n\n  Color.prototype.mix = Color.prototype.interpolate;\n\n  _input.rgb = function() {\n    var k, ref, results, v;\n    ref = unpack(arguments);\n    results = [];\n    for (k in ref) {\n      v = ref[k];\n      results.push(v);\n    }\n    return results;\n  };\n\n  chroma.rgb = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['rgb']), function(){});\n  };\n\n  Color.prototype.rgb = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (round) {\n      return this._rgb.map(Math.round).slice(0, 3);\n    } else {\n      return this._rgb.slice(0, 3);\n    }\n  };\n\n  Color.prototype.rgba = function(round) {\n    if (round == null) {\n      round = true;\n    }\n    if (!round) {\n      return this._rgb.slice(0);\n    }\n    return [Math.round(this._rgb[0]), Math.round(this._rgb[1]), Math.round(this._rgb[2]), this._rgb[3]];\n  };\n\n  _guess_formats.push({\n    p: 3,\n    test: function(n) {\n      var a;\n      a = unpack(arguments);\n      if (type(a) === 'array' && a.length === 3) {\n        return 'rgb';\n      }\n      if (a.length === 4 && type(a[3]) === \"number\" && a[3] >= 0 && a[3] <= 1) {\n        return 'rgb';\n      }\n    }\n  });\n\n  _input.lrgb = _input.rgb;\n\n  interpolate_lrgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(sqrt(pow(xyz0[0], 2) * (1 - f) + pow(xyz1[0], 2) * f), sqrt(pow(xyz0[1], 2) * (1 - f) + pow(xyz1[1], 2) * f), sqrt(pow(xyz0[2], 2) * (1 - f) + pow(xyz1[2], 2) * f), m);\n  };\n\n  _average_lrgb = function(colors) {\n    var col, f, len, o, rgb, xyz;\n    f = 1 / colors.length;\n    xyz = [0, 0, 0, 0];\n    for (o = 0, len = colors.length; o < len; o++) {\n      col = colors[o];\n      rgb = col._rgb;\n      xyz[0] += pow(rgb[0], 2) * f;\n      xyz[1] += pow(rgb[1], 2) * f;\n      xyz[2] += pow(rgb[2], 2) * f;\n      xyz[3] += rgb[3] * f;\n    }\n    xyz[0] = sqrt(xyz[0]);\n    xyz[1] = sqrt(xyz[1]);\n    xyz[2] = sqrt(xyz[2]);\n    if (xyz[3] > 1) {\n      xyz[3] = 1;\n    }\n    return new Color(clip_rgb(xyz));\n  };\n\n  _interpolators.push(['lrgb', interpolate_lrgb]);\n\n  chroma.average = function(colors, mode) {\n    var A, alpha, c, cnt, dx, dy, first, i, l, len, o, xyz, xyz2;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    l = colors.length;\n    colors = colors.map(function(c) {\n      return chroma(c);\n    });\n    first = colors.splice(0, 1)[0];\n    if (mode === 'lrgb') {\n      return _average_lrgb(colors);\n    }\n    xyz = first.get(mode);\n    cnt = [];\n    dx = 0;\n    dy = 0;\n    for (i in xyz) {\n      xyz[i] = xyz[i] || 0;\n      cnt.push(isNaN(xyz[i]) ? 0 : 1);\n      if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n        A = xyz[i] / 180 * PI;\n        dx += cos(A);\n        dy += sin(A);\n      }\n    }\n    alpha = first.alpha();\n    for (o = 0, len = colors.length; o < len; o++) {\n      c = colors[o];\n      xyz2 = c.get(mode);\n      alpha += c.alpha();\n      for (i in xyz) {\n        if (!isNaN(xyz2[i])) {\n          cnt[i] += 1;\n          if (mode.charAt(i) === 'h') {\n            A = xyz2[i] / 180 * PI;\n            dx += cos(A);\n            dy += sin(A);\n          } else {\n            xyz[i] += xyz2[i];\n          }\n        }\n      }\n    }\n    for (i in xyz) {\n      if (mode.charAt(i) === 'h') {\n        A = atan2(dy / cnt[i], dx / cnt[i]) / PI * 180;\n        while (A < 0) {\n          A += 360;\n        }\n        while (A >= 360) {\n          A -= 360;\n        }\n        xyz[i] = A;\n      } else {\n        xyz[i] = xyz[i] / cnt[i];\n      }\n    }\n    return chroma(xyz, mode).alpha(alpha / l);\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = round((u & 0xFF) / 0xFF * 100) / 100;\n      return [r, g, b, a];\n    }\n    if ((_input.css != null) && (rgb = _input.css(hex))) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  rgb2hex = function(channels, mode) {\n    var a, b, g, hxa, r, str, u;\n    if (mode == null) {\n      mode = 'auto';\n    }\n    r = channels[0], g = channels[1], b = channels[2], a = channels[3];\n    if (mode === 'auto') {\n      mode = a < 1 ? 'rgba' : 'rgb';\n    }\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    str = str.substr(str.length - 6);\n    hxa = '0' + round(a * 255).toString(16);\n    hxa = hxa.substr(hxa.length - 2);\n    return \"#\" + (function() {\n      switch (mode.toLowerCase()) {\n        case 'rgba':\n          return str + hxa;\n        case 'argb':\n          return hxa + str;\n        default:\n          return str;\n      }\n    })();\n  };\n\n  _input.hex = function(h) {\n    return hex2rgb(h);\n  };\n\n  chroma.hex = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hex']), function(){});\n  };\n\n  Color.prototype.hex = function(mode) {\n    if (mode == null) {\n      mode = 'auto';\n    }\n    return rgb2hex(this._rgb, mode);\n  };\n\n  _guess_formats.push({\n    p: 4,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"string\") {\n        return 'hex';\n      }\n    }\n  });\n\n  hsl2rgb = function() {\n    var args, b, c, g, h, i, l, o, r, ref, s, t1, t2, t3;\n    args = unpack(arguments);\n    h = args[0], s = args[1], l = args[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = o = 0; o <= 2; i = ++o) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      ref = [round(c[0] * 255), round(c[1] * 255), round(c[2] * 255)], r = ref[0], g = ref[1], b = ref[2];\n    }\n    if (args.length > 3) {\n      return [r, g, b, args[3]];\n    } else {\n      return [r, g, b];\n    }\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, min, ref, s;\n    if (r !== void 0 && r.length >= 3) {\n      ref = r, r = ref[0], g = ref[1], b = ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  chroma.hsl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsl']), function(){});\n  };\n\n  _input.hsl = hsl2rgb;\n\n  Color.prototype.hsl = function() {\n    return rgb2hsl(this._rgb);\n  };\n\n  hsv2rgb = function() {\n    var args, b, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, s, t, v;\n    args = unpack(arguments);\n    h = args[0], s = args[1], v = args[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, min, r, ref, s, v;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  chroma.hsv = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsv']), function(){});\n  };\n\n  _input.hsv = hsv2rgb;\n\n  Color.prototype.hsv = function() {\n    return rgb2hsv(this._rgb);\n  };\n\n  num2rgb = function(num) {\n    var b, g, r;\n    if (type(num) === \"number\" && num >= 0 && num <= 0xFFFFFF) {\n      r = num >> 16;\n      g = (num >> 8) & 0xFF;\n      b = num & 0xFF;\n      return [r, g, b, 1];\n    }\n    console.warn(\"unknown num color: \" + num);\n    return [0, 0, 0, 1];\n  };\n\n  rgb2num = function() {\n    var b, g, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    return (r << 16) + (g << 8) + b;\n  };\n\n  chroma.num = function(num) {\n    return new Color(num, 'num');\n  };\n\n  Color.prototype.num = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    return rgb2num(this._rgb, mode);\n  };\n\n  _input.num = num2rgb;\n\n  _guess_formats.push({\n    p: 1,\n    test: function(n) {\n      if (arguments.length === 1 && type(n) === \"number\" && n >= 0 && n <= 0xFFFFFF) {\n        return 'num';\n      }\n    }\n  });\n\n  hcg2rgb = function() {\n    var _c, _g, args, b, c, f, g, h, i, p, q, r, ref, ref1, ref2, ref3, ref4, ref5, t, v;\n    args = unpack(arguments);\n    h = args[0], c = args[1], _g = args[2];\n    c = c / 100;\n    g = g / 100 * 255;\n    _c = c * 255;\n    if (c === 0) {\n      r = g = b = _g;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = floor(h);\n      f = h - i;\n      p = _g * (1 - c);\n      q = p + _c * (1 - f);\n      t = p + _c * f;\n      v = p + _c;\n      switch (i) {\n        case 0:\n          ref = [v, t, p], r = ref[0], g = ref[1], b = ref[2];\n          break;\n        case 1:\n          ref1 = [q, v, p], r = ref1[0], g = ref1[1], b = ref1[2];\n          break;\n        case 2:\n          ref2 = [p, v, t], r = ref2[0], g = ref2[1], b = ref2[2];\n          break;\n        case 3:\n          ref3 = [p, q, v], r = ref3[0], g = ref3[1], b = ref3[2];\n          break;\n        case 4:\n          ref4 = [t, p, v], r = ref4[0], g = ref4[1], b = ref4[2];\n          break;\n        case 5:\n          ref5 = [v, p, q], r = ref5[0], g = ref5[1], b = ref5[2];\n      }\n    }\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hcg = function() {\n    var _g, b, c, delta, g, h, min, r, ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    c = delta * 100 / 255;\n    _g = min / (255 - delta) * 100;\n    if (delta === 0) {\n      h = Number.NaN;\n    } else {\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, c, _g];\n  };\n\n  chroma.hcg = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hcg']), function(){});\n  };\n\n  _input.hcg = hcg2rgb;\n\n  Color.prototype.hcg = function() {\n    return rgb2hcg(this._rgb);\n  };\n\n  css2rgb = function(css) {\n    var aa, ab, hsl, i, m, o, rgb, w;\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = o = 0; o <= 2; i = ++o) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = w = 0; w <= 3; i = ++w) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = aa = 0; aa <= 2; i = ++aa) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = ab = 0; ab <= 2; i = ++ab) {\n        rgb[i] = round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  rgb2css = function(rgba) {\n    var mode;\n    mode = rgba[3] < 1 ? 'rgba' : 'rgb';\n    if (mode === 'rgb') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ')';\n    } else if (mode === 'rgba') {\n      return mode + '(' + rgba.slice(0, 3).map(round).join(',') + ',' + rgba[3] + ')';\n    } else {\n\n    }\n  };\n\n  rnd = function(a) {\n    return round(a * 100) / 100;\n  };\n\n  hsl2css = function(hsl, alpha) {\n    var mode;\n    mode = alpha < 1 ? 'hsla' : 'hsl';\n    hsl[0] = rnd(hsl[0] || 0);\n    hsl[1] = rnd(hsl[1] * 100) + '%';\n    hsl[2] = rnd(hsl[2] * 100) + '%';\n    if (mode === 'hsla') {\n      hsl[3] = alpha;\n    }\n    return mode + '(' + hsl.join(',') + ')';\n  };\n\n  _input.css = function(h) {\n    return css2rgb(h);\n  };\n\n  chroma.css = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['css']), function(){});\n  };\n\n  Color.prototype.css = function(mode) {\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (mode.slice(0, 3) === 'rgb') {\n      return rgb2css(this._rgb);\n    } else if (mode.slice(0, 3) === 'hsl') {\n      return hsl2css(this.hsl(), this.alpha());\n    }\n  };\n\n  _input.named = function(name) {\n    return hex2rgb(w3cx11[name]);\n  };\n\n  _guess_formats.push({\n    p: 5,\n    test: function(n) {\n      if (arguments.length === 1 && (w3cx11[n] != null)) {\n        return 'named';\n      }\n    }\n  });\n\n  Color.prototype.name = function(n) {\n    var h, k;\n    if (arguments.length) {\n      if (w3cx11[n]) {\n        this._rgb = hex2rgb(w3cx11[n]);\n      }\n      this._rgb[3] = 1;\n      this;\n    }\n    h = this.hex('rgb');\n    for (k in w3cx11) {\n      if (h === w3cx11[k]) {\n        return k;\n      }\n    }\n    return h;\n  };\n\n  lch2lab = function() {\n\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n    \n    A saturation multiplier was added by Gregor Aisch\n     */\n    var c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], c = ref[1], h = ref[2];\n    h = h * DEG2RAD;\n    return [l, cos(h) * c, sin(h) * c];\n  };\n\n  lch2rgb = function() {\n    var L, a, args, b, c, g, h, l, r, ref, ref1;\n    args = unpack(arguments);\n    l = args[0], c = args[1], h = args[2];\n    ref = lch2lab(l, c, h), L = ref[0], a = ref[1], b = ref[2];\n    ref1 = lab2rgb(L, a, b), r = ref1[0], g = ref1[1], b = ref1[2];\n    return [r, g, b, args.length > 3 ? args[3] : 1];\n  };\n\n  lab2lch = function() {\n    var a, b, c, h, l, ref;\n    ref = unpack(arguments), l = ref[0], a = ref[1], b = ref[2];\n    c = sqrt(a * a + b * b);\n    h = (atan2(b, a) * RAD2DEG + 360) % 360;\n    if (round(c * 10000) === 0) {\n      h = Number.NaN;\n    }\n    return [l, c, h];\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, ref, ref1;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    ref1 = rgb2lab(r, g, b), l = ref1[0], a = ref1[1], b = ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  chroma.lch = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'lch');\n  };\n\n  chroma.hcl = function() {\n    var args;\n    args = unpack(arguments);\n    return new Color(args, 'hcl');\n  };\n\n  _input.lch = lch2rgb;\n\n  _input.hcl = function() {\n    var c, h, l, ref;\n    ref = unpack(arguments), h = ref[0], c = ref[1], l = ref[2];\n    return lch2rgb([l, c, h]);\n  };\n\n  Color.prototype.lch = function() {\n    return rgb2lch(this._rgb);\n  };\n\n  Color.prototype.hcl = function() {\n    return rgb2lch(this._rgb).reverse();\n  };\n\n  rgb2cmyk = function(mode) {\n    var b, c, f, g, k, m, r, ref, y;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = r / 255;\n    g = g / 255;\n    b = b / 255;\n    k = 1 - Math.max(r, Math.max(g, b));\n    f = k < 1 ? 1 / (1 - k) : 0;\n    c = (1 - r - k) * f;\n    m = (1 - g - k) * f;\n    y = (1 - b - k) * f;\n    return [c, m, y, k];\n  };\n\n  cmyk2rgb = function() {\n    var alpha, args, b, c, g, k, m, r, y;\n    args = unpack(arguments);\n    c = args[0], m = args[1], y = args[2], k = args[3];\n    alpha = args.length > 4 ? args[4] : 1;\n    if (k === 1) {\n      return [0, 0, 0, alpha];\n    }\n    r = c >= 1 ? 0 : 255 * (1 - c) * (1 - k);\n    g = m >= 1 ? 0 : 255 * (1 - m) * (1 - k);\n    b = y >= 1 ? 0 : 255 * (1 - y) * (1 - k);\n    return [r, g, b, alpha];\n  };\n\n  _input.cmyk = function() {\n    return cmyk2rgb(unpack(arguments));\n  };\n\n  chroma.cmyk = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['cmyk']), function(){});\n  };\n\n  Color.prototype.cmyk = function() {\n    return rgb2cmyk(this._rgb);\n  };\n\n  _input.gl = function() {\n    var i, k, o, rgb, v;\n    rgb = (function() {\n      var ref, results;\n      ref = unpack(arguments);\n      results = [];\n      for (k in ref) {\n        v = ref[k];\n        results.push(v);\n      }\n      return results;\n    }).apply(this, arguments);\n    for (i = o = 0; o <= 2; i = ++o) {\n      rgb[i] *= 255;\n    }\n    return rgb;\n  };\n\n  chroma.gl = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['gl']), function(){});\n  };\n\n  Color.prototype.gl = function() {\n    var rgb;\n    rgb = this._rgb;\n    return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\n  };\n\n  rgb2luminance = function(r, g, b) {\n    var ref;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  interpolate_rgb = function(col1, col2, f, m) {\n    var xyz0, xyz1;\n    xyz0 = col1._rgb;\n    xyz1 = col2._rgb;\n    return new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['rgb', interpolate_rgb]);\n\n  Color.prototype.luminance = function(lum, mode) {\n    var cur_lum, eps, max_iter, rgba, test;\n    if (mode == null) {\n      mode = 'rgb';\n    }\n    if (!arguments.length) {\n      return rgb2luminance(this._rgb);\n    }\n    rgba = this._rgb;\n    if (lum === 0) {\n      rgba = [0, 0, 0, this._rgb[3]];\n    } else if (lum === 1) {\n      rgba = [255, 255, 255, this[3]];\n    } else {\n      cur_lum = rgb2luminance(this._rgb);\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n        m = l.interpolate(h, 0.5, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      if (cur_lum > lum) {\n        rgba = test(chroma('black'), this).rgba();\n      } else {\n        rgba = test(this, chroma('white')).rgba();\n      }\n    }\n    return chroma(rgba).alpha(this.alpha());\n  };\n\n  temperature2rgb = function(kelvin) {\n    var b, g, r, temp;\n    temp = kelvin / 100;\n    if (temp < 66) {\n      r = 255;\n      g = -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log(g);\n      b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log(b);\n    } else {\n      r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log(r);\n      g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log(g);\n      b = 255;\n    }\n    return [r, g, b];\n  };\n\n  rgb2temperature = function() {\n    var b, eps, g, maxTemp, minTemp, r, ref, rgb, temp;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    minTemp = 1000;\n    maxTemp = 40000;\n    eps = 0.4;\n    while (maxTemp - minTemp > eps) {\n      temp = (maxTemp + minTemp) * 0.5;\n      rgb = temperature2rgb(temp);\n      if ((rgb[2] / rgb[0]) >= (b / r)) {\n        maxTemp = temp;\n      } else {\n        minTemp = temp;\n      }\n    }\n    return round(temp);\n  };\n\n  chroma.temperature = chroma.kelvin = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['temperature']), function(){});\n  };\n\n  _input.temperature = _input.kelvin = _input.K = temperature2rgb;\n\n  Color.prototype.temperature = function() {\n    return rgb2temperature(this._rgb);\n  };\n\n  Color.prototype.kelvin = Color.prototype.temperature;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2, ref, ref1;\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.distance = function(a, b, mode) {\n    var d, i, l1, l2, ref, ref1, sum_sq;\n    if (mode == null) {\n      mode = 'lab';\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    l1 = a.get(mode);\n    l2 = b.get(mode);\n    sum_sq = 0;\n    for (i in l1) {\n      d = (l1[i] || 0) - (l2[i] || 0);\n      sum_sq += d * d;\n    }\n    return Math.sqrt(sum_sq);\n  };\n\n  chroma.deltaE = function(a, b, L, C) {\n    var L1, L2, a1, a2, b1, b2, c1, c2, c4, dH2, delA, delB, delC, delL, f, h1, ref, ref1, ref2, ref3, sc, sh, sl, t, v1, v2, v3;\n    if (L == null) {\n      L = 1;\n    }\n    if (C == null) {\n      C = 1;\n    }\n    if ((ref = type(a)) === 'string' || ref === 'number') {\n      a = new Color(a);\n    }\n    if ((ref1 = type(b)) === 'string' || ref1 === 'number') {\n      b = new Color(b);\n    }\n    ref2 = a.lab(), L1 = ref2[0], a1 = ref2[1], b1 = ref2[2];\n    ref3 = b.lab(), L2 = ref3[0], a2 = ref3[1], b2 = ref3[2];\n    c1 = sqrt(a1 * a1 + b1 * b1);\n    c2 = sqrt(a2 * a2 + b2 * b2);\n    sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1);\n    sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638;\n    h1 = c1 < 0.000001 ? 0.0 : (atan2(b1, a1) * 180.0) / PI;\n    while (h1 < 0) {\n      h1 += 360;\n    }\n    while (h1 >= 360) {\n      h1 -= 360;\n    }\n    t = (h1 >= 164.0) && (h1 <= 345.0) ? 0.56 + abs(0.2 * cos((PI * (h1 + 168.0)) / 180.0)) : 0.36 + abs(0.4 * cos((PI * (h1 + 35.0)) / 180.0));\n    c4 = c1 * c1 * c1 * c1;\n    f = sqrt(c4 / (c4 + 1900.0));\n    sh = sc * (f * t + 1.0 - f);\n    delL = L1 - L2;\n    delC = c1 - c2;\n    delA = a1 - a2;\n    delB = b1 - b2;\n    dH2 = delA * delA + delB * delB - delC * delC;\n    v1 = delL / (L * sl);\n    v2 = delC / (C * sc);\n    v3 = sh;\n    return sqrt(v1 * v1 + v2 * v2 + (dH2 / (v3 * v3)));\n  };\n\n  Color.prototype.get = function(modechan) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    src = me[mode]();\n    if (channel) {\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        return src[i];\n      } else {\n        return console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      return src;\n    }\n  };\n\n  Color.prototype.set = function(modechan, value) {\n    var channel, i, me, mode, ref, src;\n    me = this;\n    ref = modechan.split('.'), mode = ref[0], channel = ref[1];\n    if (channel) {\n      src = me[mode]();\n      i = mode.indexOf(channel);\n      if (i > -1) {\n        if (type(value) === 'string') {\n          switch (value.charAt(0)) {\n            case '+':\n              src[i] += +value;\n              break;\n            case '-':\n              src[i] += +value;\n              break;\n            case '*':\n              src[i] *= +(value.substr(1));\n              break;\n            case '/':\n              src[i] /= +(value.substr(1));\n              break;\n            default:\n              src[i] = +value;\n          }\n        } else {\n          src[i] = value;\n        }\n      } else {\n        console.warn('unknown channel ' + channel + ' in mode ' + mode);\n      }\n    } else {\n      src = value;\n    }\n    return chroma(src, mode).alpha(me.alpha());\n  };\n\n  Color.prototype.clipped = function() {\n    return this._rgb._clipped || false;\n  };\n\n  Color.prototype.alpha = function(a) {\n    if (arguments.length) {\n      return chroma.rgb([this._rgb[0], this._rgb[1], this._rgb[2], a]);\n    }\n    return this._rgb[3];\n  };\n\n  Color.prototype.darken = function(amount) {\n    var lab, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lab = me.lab();\n    lab[0] -= LAB_CONSTANTS.Kn * amount;\n    return chroma.lab(lab).alpha(me.alpha());\n  };\n\n  Color.prototype.brighten = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.darken(-amount);\n  };\n\n  Color.prototype.darker = Color.prototype.darken;\n\n  Color.prototype.brighter = Color.prototype.brighten;\n\n  Color.prototype.saturate = function(amount) {\n    var lch, me;\n    if (amount == null) {\n      amount = 1;\n    }\n    me = this;\n    lch = me.lch();\n    lch[1] += amount * LAB_CONSTANTS.Kn;\n    if (lch[1] < 0) {\n      lch[1] = 0;\n    }\n    return chroma.lch(lch).alpha(me.alpha());\n  };\n\n  Color.prototype.desaturate = function(amount) {\n    if (amount == null) {\n      amount = 1;\n    }\n    return this.saturate(-amount);\n  };\n\n  Color.prototype.premultiply = function() {\n    var a, rgb;\n    rgb = this.rgb();\n    a = this.alpha();\n    return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n  };\n\n  blend = function(bottom, top, mode) {\n    if (!blend[mode]) {\n      throw 'unknown blend mode ' + mode;\n    }\n    return blend[mode](bottom, top);\n  };\n\n  blend_f = function(f) {\n    return function(bottom, top) {\n      var c0, c1;\n      c0 = chroma(top).rgb();\n      c1 = chroma(bottom).rgb();\n      return chroma(f(c0, c1), 'rgb');\n    };\n  };\n\n  each = function(f) {\n    return function(c0, c1) {\n      var i, o, out;\n      out = [];\n      for (i = o = 0; o <= 3; i = ++o) {\n        out[i] = f(c0[i], c1[i]);\n      }\n      return out;\n    };\n  };\n\n  normal = function(a, b) {\n    return a;\n  };\n\n  multiply = function(a, b) {\n    return a * b / 255;\n  };\n\n  darken = function(a, b) {\n    if (a > b) {\n      return b;\n    } else {\n      return a;\n    }\n  };\n\n  lighten = function(a, b) {\n    if (a > b) {\n      return a;\n    } else {\n      return b;\n    }\n  };\n\n  screen = function(a, b) {\n    return 255 * (1 - (1 - a / 255) * (1 - b / 255));\n  };\n\n  overlay = function(a, b) {\n    if (b < 128) {\n      return 2 * a * b / 255;\n    } else {\n      return 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255));\n    }\n  };\n\n  burn = function(a, b) {\n    return 255 * (1 - (1 - b / 255) / (a / 255));\n  };\n\n  dodge = function(a, b) {\n    if (a === 255) {\n      return 255;\n    }\n    a = 255 * (b / 255) / (1 - a / 255);\n    if (a > 255) {\n      return 255;\n    } else {\n      return a;\n    }\n  };\n\n  blend.normal = blend_f(each(normal));\n\n  blend.multiply = blend_f(each(multiply));\n\n  blend.screen = blend_f(each(screen));\n\n  blend.overlay = blend_f(each(overlay));\n\n  blend.darken = blend_f(each(darken));\n\n  blend.lighten = blend_f(each(lighten));\n\n  blend.dodge = blend_f(each(dodge));\n\n  blend.burn = blend_f(each(burn));\n\n  chroma.blend = blend;\n\n  chroma.analyze = function(data) {\n    var len, o, r, val;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    for (o = 0, len = data.length; o < len; o++) {\n      val = data[o];\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.scale = function(colors, positions) {\n    var _classes, _colorCache, _colors, _correctLightness, _domain, _fixed, _gamma, _max, _min, _mode, _nacol, _out, _padding, _pos, _spread, _useCache, classifyValue, f, getClass, getColor, resetCache, setColors, tmap;\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _pos = [];\n    _padding = [0, 0];\n    _classes = false;\n    _colors = [];\n    _out = false;\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _colorCache = {};\n    _useCache = true;\n    _gamma = 1;\n    setColors = function(colors) {\n      var c, col, o, ref, ref1, w;\n      if (colors == null) {\n        colors = ['#fff', '#000'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (chroma.brewer != null)) {\n        colors = chroma.brewer[colors] || chroma.brewer[colors.toLowerCase()] || colors;\n      }\n      if (type(colors) === 'array') {\n        if (colors.length === 1) {\n          colors = [colors[0], colors[0]];\n        }\n        colors = colors.slice(0);\n        for (c = o = 0, ref = colors.length - 1; 0 <= ref ? o <= ref : o >= ref; c = 0 <= ref ? ++o : --o) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        _pos.length = 0;\n        for (c = w = 0, ref1 = colors.length - 1; 0 <= ref1 ? w <= ref1 : w >= ref1; c = 0 <= ref1 ? ++w : --w) {\n          _pos.push(c / (colors.length - 1));\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    getClass = function(value) {\n      var i, n;\n      if (_classes != null) {\n        n = _classes.length - 1;\n        i = 0;\n        while (i < n && value >= _classes[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n      val = value;\n      if (_classes.length > 2) {\n        n = _classes.length - 1;\n        i = getClass(value);\n        minc = _classes[0] + (_classes[1] - _classes[0]) * (0 + _spread * 0.5);\n        maxc = _classes[n - 1] + (_classes[n] - _classes[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_classes[i] + (_classes[i + 1] - _classes[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, i, k, o, p, ref, t;\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val) || val === null) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_classes && _classes.length > 2) {\n          c = getClass(val);\n          t = c / (_classes.length - 2);\n        } else if (_max !== _min) {\n          t = (val - _min) / (_max - _min);\n        } else {\n          t = 1;\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      if (_gamma !== 1) {\n        t = pow(t, _gamma);\n      }\n      t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n      t = Math.min(1, Math.max(0, t));\n      k = Math.floor(t * 10000);\n      if (_useCache && _colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = o = 0, ref = _pos.length - 1; 0 <= ref ? o <= ref : o >= ref; i = 0 <= ref ? ++o : --o) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        if (_useCache) {\n          _colorCache[k] = col;\n        }\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors);\n    f = function(v) {\n      var c;\n      c = chroma(getColor(v));\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.classes = function(classes) {\n      var d;\n      if (classes != null) {\n        if (type(classes) === 'array') {\n          _classes = classes;\n          _domain = [classes[0], classes[classes.length - 1]];\n        } else {\n          d = chroma.analyze(_domain);\n          if (classes === 0) {\n            _classes = [d.min, d.max];\n          } else {\n            _classes = chroma.limits(d, 'e', classes);\n          }\n        }\n        return f;\n      }\n      return _classes;\n    };\n    f.domain = function(domain) {\n      var c, d, k, len, o, ref, w;\n      if (!arguments.length) {\n        return _domain;\n      }\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      _pos = [];\n      k = _colors.length;\n      if (domain.length === k && _min !== _max) {\n        for (o = 0, len = domain.length; o < len; o++) {\n          d = domain[o];\n          _pos.push((d - _min) / (_max - _min));\n        }\n      } else {\n        for (c = w = 0, ref = k - 1; 0 <= ref ? w <= ref : w >= ref; c = 0 <= ref ? ++w : --w) {\n          _pos.push(c / (k - 1));\n        }\n      }\n      _domain = [_min, _max];\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (v == null) {\n        v = true;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.padding = function(p) {\n      if (p != null) {\n        if (type(p) === 'number') {\n          p = [p, p];\n        }\n        _padding = p;\n        return f;\n      } else {\n        return _padding;\n      }\n    };\n    f.colors = function(numColors, out) {\n      var dd, dm, i, o, ref, result, results, samples, w;\n      if (arguments.length < 2) {\n        out = 'hex';\n      }\n      result = [];\n      if (arguments.length === 0) {\n        result = _colors.slice(0);\n      } else if (numColors === 1) {\n        result = [f(0.5)];\n      } else if (numColors > 1) {\n        dm = _domain[0];\n        dd = _domain[1] - dm;\n        result = (function() {\n          results = [];\n          for (var o = 0; 0 <= numColors ? o < numColors : o > numColors; 0 <= numColors ? o++ : o--){ results.push(o); }\n          return results;\n        }).apply(this).map(function(i) {\n          return f(dm + i / (numColors - 1) * dd);\n        });\n      } else {\n        colors = [];\n        samples = [];\n        if (_classes && _classes.length > 2) {\n          for (i = w = 1, ref = _classes.length; 1 <= ref ? w < ref : w > ref; i = 1 <= ref ? ++w : --w) {\n            samples.push((_classes[i - 1] + _classes[i]) * 0.5);\n          }\n        } else {\n          samples = _domain;\n        }\n        result = samples.map(function(v) {\n          return f(v);\n        });\n      }\n      if (chroma[out]) {\n        result = result.map(function(c) {\n          return c[out]();\n        });\n      }\n      return result;\n    };\n    f.cache = function(c) {\n      if (c != null) {\n        _useCache = c;\n        return f;\n      } else {\n        return _useCache;\n      }\n    };\n    f.gamma = function(g) {\n      if (g != null) {\n        _gamma = g;\n        return f;\n      } else {\n        return _gamma;\n      }\n    };\n    f.nodata = function(d) {\n      if (d != null) {\n        _nacol = chroma(d);\n        return f;\n      } else {\n        return _nacol;\n      }\n    };\n    return f;\n  };\n\n  if (chroma.scales == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, len, o, r, val, visit;\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (o = 0, len = data.length; o < len; o++) {\n        val = data[o];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var aa, ab, ac, ad, ae, af, ag, ah, ai, aj, ak, al, am, assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max_log, min, min_log, mindist, n, nb_iters, newCentroids, o, p, pb, pr, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, repeat, sum, tmpKMeansBreaks, v, value, values, w;\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    if (num === 1) {\n      return [min, max];\n    }\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = o = 1, ref = num - 1; 1 <= ref ? o <= ref : o >= ref; i = 1 <= ref ? ++o : --o) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * log(min);\n      max_log = Math.LOG10E * log(max);\n      limits.push(min);\n      for (i = w = 1, ref1 = num - 1; 1 <= ref1 ? w <= ref1 : w >= ref1; i = 1 <= ref1 ? ++w : --w) {\n        limits.push(pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = aa = 1, ref2 = num - 1; 1 <= ref2 ? aa <= ref2 : aa >= ref2; i = 1 <= ref2 ? ++aa : --aa) {\n        p = (values.length - 1) * i / num;\n        pb = floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n       */\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = ab = 1, ref3 = num - 1; 1 <= ref3 ? ab <= ref3 : ab >= ref3; i = 1 <= ref3 ? ++ab : --ab) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = ac = 0, ref4 = num - 1; 0 <= ref4 ? ac <= ref4 : ac >= ref4; j = 0 <= ref4 ? ++ac : --ac) {\n          clusterSizes[j] = 0;\n        }\n        for (i = ad = 0, ref5 = n - 1; 0 <= ref5 ? ad <= ref5 : ad >= ref5; i = 0 <= ref5 ? ++ad : --ad) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = ae = 0, ref6 = num - 1; 0 <= ref6 ? ae <= ref6 : ae >= ref6; j = 0 <= ref6 ? ++ae : --ae) {\n            dist = abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = af = 0, ref7 = num - 1; 0 <= ref7 ? af <= ref7 : af >= ref7; j = 0 <= ref7 ? ++af : --af) {\n          newCentroids[j] = null;\n        }\n        for (i = ag = 0, ref8 = n - 1; 0 <= ref8 ? ag <= ref8 : ag >= ref8; i = 0 <= ref8 ? ++ag : --ag) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = ah = 0, ref9 = num - 1; 0 <= ref9 ? ah <= ref9 : ah >= ref9; j = 0 <= ref9 ? ++ah : --ah) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = ai = 0, ref10 = num - 1; 0 <= ref10 ? ai <= ref10 : ai >= ref10; j = 0 <= ref10 ? ++ai : --ai) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = aj = 0, ref11 = num - 1; 0 <= ref11 ? aj <= ref11 : aj >= ref11; j = 0 <= ref11 ? ++aj : --aj) {\n        kClusters[j] = [];\n      }\n      for (i = ak = 0, ref12 = n - 1; 0 <= ref12 ? ak <= ref12 : ak >= ref12; i = 0 <= ref12 ? ++ak : --ak) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = al = 0, ref13 = num - 1; 0 <= ref13 ? al <= ref13 : al >= ref13; j = 0 <= ref13 ? ++al : --al) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = am = 1, ref14 = tmpKMeansBreaks.length - 1; am <= ref14; i = am += 2) {\n        v = tmpKMeansBreaks[i];\n        if (!isNaN(v) && limits.indexOf(v) === -1) {\n          limits.push(v);\n        }\n      }\n    }\n    return limits;\n  };\n\n  hsi2rgb = function(h, s, i) {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n    var args, b, g, r;\n    args = unpack(arguments);\n    h = args[0], s = args[1], i = args[2];\n    if (isNaN(h)) {\n      h = 0;\n    }\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\n  };\n\n  rgb2hsi = function() {\n\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n     */\n    var b, g, h, i, min, r, ref, s;\n    ref = unpack(arguments), r = ref[0], g = ref[1], b = ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  chroma.hsi = function() {\n    return (function(func, args, ctor) {\n      ctor.prototype = func.prototype;\n      var child = new ctor, result = func.apply(child, args);\n      return Object(result) === result ? result : child;\n    })(Color, slice.call(arguments).concat(['hsi']), function(){});\n  };\n\n  _input.hsi = hsi2rgb;\n\n  Color.prototype.hsi = function() {\n    return rgb2hsi(this._rgb);\n  };\n\n  interpolate_hsx = function(col1, col2, f, m) {\n    var dh, hue, hue0, hue1, lbv, lbv0, lbv1, res, sat, sat0, sat1, xyz0, xyz1;\n    if (m === 'hsl') {\n      xyz0 = col1.hsl();\n      xyz1 = col2.hsl();\n    } else if (m === 'hsv') {\n      xyz0 = col1.hsv();\n      xyz1 = col2.hsv();\n    } else if (m === 'hcg') {\n      xyz0 = col1.hcg();\n      xyz1 = col2.hcg();\n    } else if (m === 'hsi') {\n      xyz0 = col1.hsi();\n      xyz1 = col2.hsi();\n    } else if (m === 'lch' || m === 'hcl') {\n      m = 'hcl';\n      xyz0 = col1.hcl();\n      xyz1 = col2.hcl();\n    }\n    if (m.substr(0, 1) === 'h') {\n      hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n      hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n    }\n    if (!isNaN(hue0) && !isNaN(hue1)) {\n      if (hue1 > hue0 && hue1 - hue0 > 180) {\n        dh = hue1 - (hue0 + 360);\n      } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n        dh = hue1 + 360 - hue0;\n      } else {\n        dh = hue1 - hue0;\n      }\n      hue = hue0 + f * dh;\n    } else if (!isNaN(hue0)) {\n      hue = hue0;\n      if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n        sat = sat0;\n      }\n    } else if (!isNaN(hue1)) {\n      hue = hue1;\n      if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n        sat = sat1;\n      }\n    } else {\n      hue = Number.NaN;\n    }\n    if (sat == null) {\n      sat = sat0 + f * (sat1 - sat0);\n    }\n    lbv = lbv0 + f * (lbv1 - lbv0);\n    return res = chroma[m](hue, sat, lbv);\n  };\n\n  _interpolators = _interpolators.concat((function() {\n    var len, o, ref, results;\n    ref = ['hsv', 'hsl', 'hsi', 'hcl', 'lch', 'hcg'];\n    results = [];\n    for (o = 0, len = ref.length; o < len; o++) {\n      m = ref[o];\n      results.push([m, interpolate_hsx]);\n    }\n    return results;\n  })());\n\n  interpolate_num = function(col1, col2, f, m) {\n    var n1, n2;\n    n1 = col1.num();\n    n2 = col2.num();\n    return chroma.num(n1 + (n2 - n1) * f, 'num');\n  };\n\n  _interpolators.push(['num', interpolate_num]);\n\n  interpolate_lab = function(col1, col2, f, m) {\n    var res, xyz0, xyz1;\n    xyz0 = col1.lab();\n    xyz1 = col2.lab();\n    return res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n  };\n\n  _interpolators.push(['lab', interpolate_lab]);\n\n}).call(this);\n","module.exports = L;","var L = require('leaflet');\nvar chroma = require('chroma-js');\nvar _ = {\n  defaults: require('lodash/object/defaults'),\n  extend: require('lodash/object/extend'),\n};\n\n// determine the value for a polygon\n// valueProperty can be a simple property name or\n// a function that accepts a feature and returns a value.\nfunction getValue(feature, valueProperty) {\n  return (typeof valueProperty === 'function' ? \n    valueProperty(feature) : feature.properties[valueProperty]);\n}\n\n// returns a function that will set the color for each polygon\nfunction styleFunction(self) {\n  return function styleFeature(feature) {\n\n    var style = {};\n    var featureValue = getValue(feature, self._options.valueProperty);\n\n    if (!isNaN(featureValue)) {\n      // Find the bucket/step/limit that self value is less than and give it that color\n      // skip the first value of the limits that's the min value of our range.\n      var upperLimit;\n      for (var i = 1; i < self._limits.length; i++) {\n        upperLimit = i === (self._limits.length-1) ? (self._limits[i] + 1) : self._limits[i];\n        if (featureValue < upperLimit) {\n          style.fillColor = self._colors[i-1];\n          break;\n        }\n      }\n    }\n\n    // Return self style, but include the user-defined style if it was passed\n    switch (typeof self._userStyle) {\n      case 'function':\n        return _.extend(self._userStyle(), style);\n      case 'object':\n        return _.extend(self._userStyle, style);\n      default:\n        return style;\n    }\n  };\n}\n\n\n// Main Class extends L.GeoJSON\n// geojson can be null, and the data can be set later on using setGeoJSON()\nL.GeoJSONChoropleth = L.GeoJSON.extend({\n  initialize: function(geojson, options, legendOptions) {\n\n    var self = this;\n\n    options = options || {}\n\n    // Set default options in case any weren't passed\n    // See https://gka.github.io/chroma.js/ for details\n    _.defaults(options, {\n      valueProperty: 'value',\n      scale: ['white', 'red'],\n      steps: 5,\n      mode: 'q',\n      channelMode: 'rgb',\n      padding: false,\n      correctLightness: false,\n      bezierInterpolate: false\n    });\n\n    // save options\n    self._options = options;\n\n    // Save what the user passed as the style property for later use (since we're overriding it)\n    self._userStyle = options.style\n\n    // Create color buckets\n    var cols = options.colors;\n    if(!cols) {\n      if(options.bezierInterpolate) {\n        cols = chroma.bezier(options.scale).scale();\n      } else {\n        cols = chroma.scale(options.scale);\n        cols = options.channelMode !== 'rgb' ? cols.mode(options.channelMode) : cols ; //rgb is default.\n        cols = options.correctLightness ? cols.correctLightness() : cols;\n      }\n      cols = options.padding ?\n        cols.padding(options.padding).colors(options.steps) : cols.colors(options.steps);\n    }\n    self._colors = cols;\n\n    // will be calculated when data is added\n    // the geojson data can be added later on\n    self._limits = null;\n\n    // Check if we need to create a legend\n    if(!$.isEmptyObject(legendOptions)) {\n\n      var formatOptions = {}, // formatting of number range\n        legendTitle = null, // title for the legend\n        highlightStyle = null, // style used to highlight matching polygons on hover\n        resetStyle = null; // style to reset back to, can be null\n      if(legendOptions.formatOptions) {\n        formatOptions = legendOptions.formatOptions;\n        delete legendOptions.formatOptions;\n      }\n      if(legendOptions.title) {\n        legendTitle = legendOptions.title;\n        delete legendOptions.title;\n      }\n      if(legendOptions.highlightStyle) {\n        highlightStyle = legendOptions.highlightStyle;\n        delete legendOptions.highlightStyle;\n      }\n      if(legendOptions.resetStyle) {\n        resetStyle = legendOptions.resetStyle;\n        delete legendOptions.resetStyle;\n      }\n\n      // default formatting of the numbers\n      _.defaults(formatOptions, {\n        locale: 'en-US',\n        options: {\n          style: 'decimal',\n          maximumFractionDigits : 2\n        }\n      })\n\n      self._legend = L.control(legendOptions);\n      self._legend.formatOptions = formatOptions;\n      self._legend.title = legendTitle;\n      self._legend.highlightStyle = highlightStyle;\n      self._legend.resetStyle = resetStyle;\n    }\n\n    // proceed on to L.GeoJSON's initialize call, but\n    // don't pass the geojson object yet because\n    // we haven't called setGeoJSON yet\n    L.GeoJSON.prototype.initialize.call(self, null,\n      _.extend(self._options,{style: styleFunction(this)}));\n    \n    // call setGeoJSON in case geojson was provided \n    // else it will have to be called manually later.\n    if(geojson) {\n      self.setGeoJSON(geojson);\n    }\n\n  },\n  onAdd: function(map) {\n    var self = this;\n\n    L.LayerGroup.prototype.onAdd.call(self, map);\n\n    if(self._legend) {\n      // add Legend to map only if limits are calculated, else just store the map.\n      // this allows the legend to be added when actual data is added to the layer.\n      if(self._legend.onAdd) {\n        self._legend.addTo(map);\n      } else {\n        self._legend._map = map;\n      }\n    }\n  },\n  onRemove: function(map) {\n    var self = this;\n    if(self._legend) {\n      self._legend.remove();\n    }\n    L.LayerGroup.prototype.onRemove.call(self, map);\n  },\n  setGeoJSON: function(geojson) {\n    var self = this;\n\t\tvar features = L.Util.isArray(geojson) ? geojson : geojson.features;\n    \n    var values = features.map(function (feature) {\n      return getValue(feature, self._options.valueProperty);\n    });\n\n    // Notes that our limits array has 1 more element than our colors arrary\n    // this is because the limits denote a range and colors correspond to the range.\n    // So if your limits are [0, 10, 20, 30], you'll have 3 colors one for each range 0-9, 10-19, 20-30\n    self._limits = chroma.limits(values, self._options.mode, self._options.steps)\n    //\n    // Add the geojson to L.GeoJSON object so that our geometries are initialized.\n    L.GeoJSON.prototype.addData.call(self, geojson);\n\n    \n    // Calculate legend items and add legend if needed\n    if(self._legend) {\n\n      var legendTitle = self._legend.title,\n        locale = self._legend.formatOptions.locale,\n        localeOptions = self._legend.formatOptions.options,\n        highlightStyle = self._legend.highlightStyle,\n        resetStyle = self._legend.resetStyle;\n\n      self._legend.onAdd = function (map) {\n\n        var div = L.DomUtil.create('div', 'info legend');\n        if(legendTitle) {\n          var title = document.createElement(\"div\");\n          title.style={};\n          title.style['font-weight'] = \"bold\";\n          title.appendChild(document.createTextNode(legendTitle));\n          div.appendChild(title);\n        }\n\n        for (var i = 0; i < (self._limits.length-1); i++) {\n          var from, to, span, color, text;\n          from = self._limits[i];\n          // Slightly increase the last value so that we can use from >= featureValue < to\n          to = i === (self._limits.length-2) ? (self._limits[i+1] + 1) : self._limits[i+1];\n          \n          span = document.createElement(\"span\");\n          span.classList.add(\"legendItem\");\n          span.id = L.stamp(span); // unique id for each legend item.\n          span.dataset.from = from;\n          span.dataset.to = to;\n\n          color = document.createElement(\"i\");\n          color.style.background = self._colors[i];\n          color.style.border = \"solid 0.5px #666\";\n\n          textSpan = document.createElement(\"span\");\n          text = document.createTextNode(\n            from.toLocaleString(locale, localeOptions) + ' - ' +\n              to.toLocaleString(locale, localeOptions) );\n          textSpan.appendChild(text);\n\n          span.appendChild(color);\n          span.appendChild(textSpan);\n\n          div.appendChild(span);\n          div.appendChild(document.createElement(\"br\"));\n\n\n          if(!$.isEmptyObject(highlightStyle)) {\n\n            self.eachLayer(function (layer) {\n              var featureValue = getValue(layer.feature, self._options.valueProperty);\n              if (featureValue >= from  && featureValue < to) {\n                layer._legendItemId = span.id; \n                if(!layer._highlightLegendItem) {\n                  layer._highlightLegendItem = true;\n                  layer.on({\n                    mouseover: function(e) {\n                      document.getElementById(e.target._legendItemId).style['font-weight'] = 'bold';\n                    },\n                    mouseout: function(e) {\n                       document.getElementById(e.target._legendItemId).style['font-weight'] = 'normal';\n                    }\n                  });\n                }\n              }\n            });\n\n            span.addEventListener(\"mouseover\", function (event) {\n              var span = event.currentTarget,\n                from = span.dataset.from,\n                to = span.dataset.to;\n\n              span.style['font-weight'] = 'bold';\n\n              self.eachLayer(function (layer) {\n                var featureValue = getValue(layer.feature, self._options.valueProperty);\n\n                if(span.id === layer._legendItemId) {\n                    layer.setStyle(highlightStyle);\n                    if(highlightStyle.bringToFront) {\n                      layer.bringToFront();\n                    }\n                  }\n              });\n            });\n            span.addEventListener(\"mouseout\", function (event) {\n              var span = event.currentTarget,\n                from = span.dataset.from,\n                to = span.dataset.to;\n              \n              span.style['font-weight'] = 'normal';\n\n              self.eachLayer(function (layer) {\n\n                var featureValue = getValue(layer.feature, self._options.valueProperty);\n\n                if(span.id === layer._legendItemId) {\n                    if(!$.isEmptyObject(resetStyle)) {\n                      layer.setStyle(resetStyle);\n                    } else {\n                      self.resetStyle(layer);\n                    }\n                    if(highlightStyle.sendToBack) {\n                      layer.bringToBack();\n                    }\n                  }\n              });\n            });\n          }\n        }\n\n        return div;\n      };\n      // depending on how the GeoJSON data is supplied the map may or maynot be present at this time.\n      if(self._legend._map) {\n        self._legend.addTo(self._legend._map);\n      }\n    }\n  }\n});\n\nL.choropleth = module.exports = function (geojson, options, legendOptions) {\n\treturn new L.GeoJSONChoropleth(geojson, options, legendOptions);\n};\n"],"sourceRoot":""}